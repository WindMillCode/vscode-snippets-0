{

	"contact support": {
		"prefix": "please try",
		"body": [
			"please try again later or contact support if the issue persists"
		]
	},
	"useState":{
		"prefix":"state",
		"body": "const [$1,set${1/(.*)/${1:/capitalize}/}] = useState($2)"
	},
	"reactSetter":{
		"prefix": "set",
		"body": "$1((olds)=>{\n\tlet myNew = $2\n\treturn myNew\n})"
	},
	"useState WMLUseEffectFlags":{
		"prefix":"state",
		"body": "const [init$1,setInit${1/(.*)/${1:/capitalize}/}] = useState(WMLUseEffectFlags.PENDING)\nconst useInit${1/(.*)/${1:/capitalize}/} = ()=>{\n\tuseEffect(()=>{\n\t\tif(init$1 !== WMLUseEffectFlags.ACTIVE)\n\t\t\treturn;\n\t\tsetInit${1/(.*)/${1:/capitalize}/}(WMLUseEffectFlags.COMPLETED)\n\t},[init$1])\n}"
	},
	"useEffect":{
		"prefix":"useEffect",
		"body":"useEffect(()=>{\n\n},[$1])"
	},
	"WMLUseEffectFlags":{
		"prefix":"wmlUseEffect",
		"body":"useEffect(()=>{\n\n\tif($1 !== WMLUseEffectFlags.ACTIVE) return\n},[$1])"
	},
	"classPrefix":{
		"prefix":"classPrefix",
		"body": "className={classPrefix(\"$1\")}"
	},
	"generateArray":{
		"prefix": "Array(",
		"body": "Array($1)\n.fill(null)\n.map((nullVal,index0)=>{\n\n})"
	},
	"forEach":{
		"prefix": "forEach",
		"body": ".forEach(($1)=>{$2\n\n})"
	},
	"map":{
		"prefix": "map",
		"body": ".map(($1)=>{$2\n\n})"
	},
	"filter":{
		"prefix": "filter",
		"body": ".filter(($1)=>{$2\n\n})"
	},
	"reduce":{
		"prefix": "reduce",
		"body": ".reduce((acc,$1)=>{$2\n\n})"
	},
	"class":{
		"prefix": "class",
		"body": "class $1 {\n\tconstructor(params:Partial<$1>={}){\n\t\tObject.assign(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\t...params\n\t\t\t}\n\t\t)\n\t}\n}"
	},
	"img":{
		"prefix":"<img",
		"body":"<img src={$1.src} alt={$1.alt} />"
	},
	"js comment":{
		"prefix": "js comment",
		"body": "/**\n * @$1 $2\n*/"
	}
}
