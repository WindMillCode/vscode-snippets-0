{
	// Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:

	"classPrefix":{
		"prefix":"classPrefix",
		"body": "className={classPrefix(\"$1\")}"
	},
	"generateArray":{
		"prefix": "Array(",
		"body": "Array($1)\n.fill(null)\n.map((nullVal,index0)=>{\n\n})"
	},
	"forEach":{
		"prefix": "forEach",
		"body": ".forEach(($1)=>{$2\n\n})"
	},
	"map":{
		"prefix": "map",
		"body": ".map(($1)=>{$2\n\n})"
	},
	"filter":{
		"prefix": "filter",
		"body": ".filter(($1)=>{$2\n\n})"
	},
	"reduce":{
		"prefix": "reduce",
		"body": ".reduce((acc,$1)=>{$2\n\n})"
	},
	"class with filter constructor":{
		"prefix": "class",
		"body": [
			"export class $1 {",
			"  constructor(props = {}) {",
			"    let origProps = Object.entries(props)",
			"      .filter(([key,val]) => {",
			"        return !key.startsWith('param');",
			"      });",
			"    Object.assign(this, { ...Object.fromEntries(origProps) });",
			"  }",
			"}"
		],
		"description": "Creates a class with a filtered constructor"
	}
}
