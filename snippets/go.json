{

	"for range loop": {
    "prefix": "gorange",
    "body": [
        "for _, entry := range ${1:allEntries} {",
        "\t// Your code here",
        "}"
    ],
    "description": "Create a Go for range loop"
},
	"GetInput": {
		"prefix": "GetInputFromStdin",
		"body": [
			"$1 := utils.GetInputFromStdin(\n\tutils.GetInputFromStdinStruct{\n\t\tPrompt: []string{\"$2\"},\n\t\tDefault: \"$3\",\n\t},\n)"
		],
		"description": "grab input from stdin"
	},
	"ShowMenu": {
		"prefix": "ShowMenu",
		"body": [
      "cliInfo := utils.ShowMenuModel{\n\tPrompt: \"$2\",\n\tChoices:[]string{\"$3\"},\n}\n$4 := utils.ShowMenu(cliInfo,nil)"
    ],
    "description": "code to create a cli interface where a user must choose a program"

	},
  "RemoveDir": {
		"prefix": "RemoveDir",
		"body": [
      "if err := os.RemoveAll($1); err != nil {\n\tfmt.Println(\"Error:\", err)\n\treturn\n}"
    ],
    "description": "remove a file or folder"

	},
  "GrabSettingsJSON": {
		"prefix": "GrabSettingsJSON",
		"body": [
      "workspaceRoot, err := os.Getwd()\nif err != nil {\n\treturn\n}\nsettings, err := utils.GetSettingsJSON(workspaceRoot)\nif err != nil {\n\treturn\n}"
    ],
    "description": "remove a file or folder"
	},
	"wait group template":{
		"prefix":"sync.WaitGroup",
		"body":[
			"var wg sync.WaitGroup\nwg.Add(1)\ngo func() {\n\t\tdefer wg.Done()\n\t}()\nwg.Wait()"
		]
	}
}
